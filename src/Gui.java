
import funico.Main;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Jefferson
 */
public class Gui extends javax.swing.JFrame {

    /**
     * Creates new form Gui
     */
    public Gui() {
        initComponents();
        this.selectionOperator = true;
        this.selectedOperators = new HashMap<>();
        
        String[] operators = new String[]{"aoc", "es", "is", "tm", 
                                          "bxo", "exo", "eqxo"};
        
        for(String op : operators) {
            this.selectedOperators.put(op, false);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        selection = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        examples = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        output = new javax.swing.JTextArea();
        aoc = new javax.swing.JCheckBox();
        es = new javax.swing.JCheckBox();
        is = new javax.swing.JCheckBox();
        exo = new javax.swing.JCheckBox();
        tm = new javax.swing.JCheckBox();
        bxo = new javax.swing.JCheckBox();
        generate = new javax.swing.JButton();
        tournament = new javax.swing.JRadioButton();
        elitism = new javax.swing.JRadioButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        fitness = new javax.swing.JLabel();
        iters = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        pops = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        toEvaluate = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        outputProgram = new javax.swing.JTextArea();
        evaluate = new javax.swing.JButton();
        eqxo = new javax.swing.JCheckBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        open = new javax.swing.JMenuItem();
        exit = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        examples.setColumns(20);
        examples.setRows(5);
        jScrollPane1.setViewportView(examples);

        output.setColumns(20);
        output.setRows(5);
        jScrollPane2.setViewportView(output);

        aoc.setText("Cortar rama");
        aoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aocActionPerformed(evt);
            }
        });

        es.setText("Cambio prioridad");
        es.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                esActionPerformed(evt);
            }
        });

        is.setText("Swap interno");
        is.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isActionPerformed(evt);
            }
        });

        exo.setText("Ecuaciones");
        exo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exoActionPerformed(evt);
            }
        });

        tm.setText("Terminal");
        tm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tmActionPerformed(evt);
            }
        });

        bxo.setText("Ramas");
        bxo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bxoActionPerformed(evt);
            }
        });

        generate.setText("Generar");
        generate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateActionPerformed(evt);
            }
        });

        selection.add(tournament);
        tournament.setSelected(true);
        tournament.setText("Torneo");
        tournament.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tournamentActionPerformed(evt);
            }
        });

        selection.add(elitism);
        elitism.setText("Elitista");
        elitism.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elitismActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "Solución", "Cobertura"
            }
        ));
        jScrollPane3.setViewportView(table);

        jLabel1.setText("Operadores de mutación");

        jLabel2.setText("Operadores de cruce");

        jLabel3.setText("Mecanismo de selección de padres");

        jLabel4.setText("Cobertura de solución:");

        iters.setText("3");
        iters.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itersActionPerformed(evt);
            }
        });

        jLabel5.setText("# de iteraciones");

        pops.setText("50");
        pops.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popsActionPerformed(evt);
            }
        });

        jLabel6.setText("Tamaño de población");

        jLabel9.setText("Ejemplos");

        jLabel10.setText("Programa");

        toEvaluate.setColumns(20);
        toEvaluate.setRows(5);
        jScrollPane4.setViewportView(toEvaluate);

        jLabel7.setText("Evaluar en");

        jLabel8.setText("Salida");

        outputProgram.setColumns(20);
        outputProgram.setRows(5);
        jScrollPane5.setViewportView(outputProgram);

        evaluate.setText("Evaluar");
        evaluate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                evaluateActionPerformed(evt);
            }
        });

        eqxo.setText("Igualación");
        eqxo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eqxoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jScrollPane5)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(aoc)
                                    .addComponent(tm))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(es)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(is))
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(generate)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(evaluate))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel2)
                                            .addGap(171, 171, 171))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(bxo)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(exo)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(eqxo)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(159, 159, 159))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(tournament)
                                                .addGap(8, 8, 8)
                                                .addComponent(elitism))
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(iters, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(148, 148, 148))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fitness))
                            .addComponent(jLabel6)
                            .addComponent(pops, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(es)
                                .addComponent(aoc)
                                .addComponent(is))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(tm)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(bxo)
                                    .addComponent(exo)
                                    .addComponent(eqxo))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(elitism)
                                    .addComponent(tournament))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(106, 106, 106)
                                .addComponent(iters, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pops, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(fitness))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(generate)
                            .addComponent(evaluate)))
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jMenu1.setText("Archivo");

        open.setText("Abrir");
        open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openActionPerformed(evt);
            }
        });
        jMenu1.add(open);

        exit.setText("Salir");
        jMenu1.add(exit);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private String openFile() {
        String aux="";   
        String texto="";
        try
        {
        /**llamamos el metodo que permite cargar la ventana*/
        JFileChooser file=new JFileChooser();
        file.showOpenDialog(this);
        /**abrimos el archivo seleccionado*/
        File abre=file.getSelectedFile();

        /**recorremos el archivo, lo leemos para plasmarlo
        *en el area de texto*/
        if(abre!=null)
        {     
          FileReader archivos=new FileReader(abre);
          BufferedReader lee=new BufferedReader(archivos);
          while((aux=lee.readLine())!=null)
          {
             texto+= aux+ "\n";
          }
             lee.close();
        }    
        }
        catch(IOException ex)
        {
         JOptionPane.showMessageDialog(null,ex+"" +
               "\nNo se ha encontrado el archivo",
                     "ADVERTENCIA!!!", JOptionPane.WARNING_MESSAGE);
        }
        return texto;//El texto se almacena en el JTextArea
    }
    
    private void formatText(String text) {
        String [] equations = text.split("\n");
        String [][] mat = new String[equations.length][2];
        for(int i = 0;i< equations.length;i++){
            mat[i][0] = equations[i].split("=")[0];
            mat[i][1] = equations[i].split("=")[1];
        }
        setExamplesData(mat);
    }
    
    
    
    private void openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openActionPerformed
        String data = openFile();
        formatText(data);
        examples.setText(data);
    }//GEN-LAST:event_openActionPerformed

    private void elitismActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elitismActionPerformed
        selectionOperator = false;
    }//GEN-LAST:event_elitismActionPerformed
    
    private String formatSolution(String solution){
        String [] text = solution.split(";");
        String format = "";
        for(String eq:text){
            format += eq+";\n";
        }
        return format;
    }
    
    private void generateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateActionPerformed
        Main main = new Main();
        
        iteration = Integer.valueOf(iters.getText());
        population = Integer.valueOf(pops.getText());
        
        // config options
        main.setTournament(selectionOperator);
        main.setPopulationSize(population);
        main.setIterations(iteration);
        
        formatText(examples.getText());
        main.generateSolution(getExamplesData(), selectedOperators);
        String solution = formatSolution(main.getSolution().toString());
        output.setText(solution);
        fitness.setText(Double.toString(main.getQuality()));
        
        // add table
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
        Object[][] pop = main.getPopulation();
        
        for(int i = 0; i < pop.length; ++i) {
            model.addRow(pop[i]);
        }
        
        table.setModel(model);
    }//GEN-LAST:event_generateActionPerformed

    private void exoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exoActionPerformed
        boolean value = this.selectedOperators.get("exo");
        this.selectedOperators.put("exo", !value);
    }//GEN-LAST:event_exoActionPerformed

    private void esActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_esActionPerformed
        boolean value = this.selectedOperators.get("es");
        this.selectedOperators.put("es", !value);
    }//GEN-LAST:event_esActionPerformed

    private void tournamentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tournamentActionPerformed
        selectionOperator = true;
    }//GEN-LAST:event_tournamentActionPerformed

    private void itersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itersActionPerformed
        
    }//GEN-LAST:event_itersActionPerformed

    private void popsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popsActionPerformed

    }//GEN-LAST:event_popsActionPerformed

    private void aocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aocActionPerformed
        boolean value = this.selectedOperators.get("aoc");
        this.selectedOperators.put("aoc", !value);
    }//GEN-LAST:event_aocActionPerformed

    private void isActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isActionPerformed
        boolean value = this.selectedOperators.get("is");
        this.selectedOperators.put("is", !value);
    }//GEN-LAST:event_isActionPerformed

    private void tmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tmActionPerformed
        boolean value = this.selectedOperators.get("tm");
        this.selectedOperators.put("tm", !value);
    }//GEN-LAST:event_tmActionPerformed

    private void bxoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bxoActionPerformed
        boolean value = this.selectedOperators.get("bxo");
        this.selectedOperators.put("bxo", !value);
    }//GEN-LAST:event_bxoActionPerformed

    private void evaluateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_evaluateActionPerformed
        String program = this.output.getText();
        String[] toEval = this.toEvaluate.getText().split(";");
        String[] out = Main.evaluateProgram(program, toEval);
        
        StringBuilder s = new StringBuilder();
        for(String o : out) {
            s.append(o);
            s.append("\n");
        }
        
        this.outputProgram.setText(s.toString());
    }//GEN-LAST:event_evaluateActionPerformed

    private void eqxoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eqxoActionPerformed
        boolean value = this.selectedOperators.get("eqxo");
        this.selectedOperators.put("eqxo", !value);
    }//GEN-LAST:event_eqxoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gui().setVisible(true);
            }
        });
    }
    
    private String[][] examplesData;
    private boolean selectionOperator;
    private int population;
    private int iteration;
    private Map<String, Boolean> selectedOperators;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox aoc;
    private javax.swing.JCheckBox bxo;
    private javax.swing.JRadioButton elitism;
    private javax.swing.JCheckBox eqxo;
    private javax.swing.JCheckBox es;
    private javax.swing.JButton evaluate;
    private javax.swing.JTextArea examples;
    private javax.swing.JMenuItem exit;
    private javax.swing.JCheckBox exo;
    private javax.swing.JLabel fitness;
    private javax.swing.JButton generate;
    private javax.swing.JCheckBox is;
    private javax.swing.JTextField iters;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JMenuItem open;
    private javax.swing.JTextArea output;
    private javax.swing.JTextArea outputProgram;
    private javax.swing.JTextField pops;
    private javax.swing.ButtonGroup selection;
    private javax.swing.JTable table;
    private javax.swing.JCheckBox tm;
    private javax.swing.JTextArea toEvaluate;
    private javax.swing.JRadioButton tournament;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the selectionOperator
     */
    public boolean isSelectionOperator() {
        return selectionOperator;
    }

    /**
     * @param selectionOperator the selectionOperator to set
     */
    public void setSelectionOperator(boolean selectionOperator) {
        this.selectionOperator = selectionOperator;
    }
    
    /**
     * @return the examplesData
     */
    public String[][] getExamplesData() {
        return examplesData;
    }

    /**
     * @param examplesData the examplesData to set
     */
    public void setExamplesData(String[][] examplesData) {
        this.examplesData = examplesData;
    }

}
